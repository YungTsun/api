syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";

service OperatorService {
    rpc GetMetrics(GetMetricsRequest)
        returns (GetMetricsResponse) {}
    rpc PostPredictResult(PostPredictResultRequest)
        returns (PostPredictResultResponse) {}
}

message GetMetricsRequest {
    string metric = 1;
    oneof time_selector {
        google.protobuf.Timestamp time = 2;
        google.protobuf.Duration duration = 3;
        TimeRange time_range = 4;
    }
    repeated LabelSelector conditions = 5;
}

message GetMetricsResponse {
    repeated Result results = 1;
}

message Resource {
    map<string,string> limit = 1;
    map<string,string> request = 2;
}

message Recommendation {
    google.protobuf.Timestamp time = 1;
    Resource resource = 2;
}

message PredictData {
    google.protobuf.Timestamp time = 1;
    string value = 2;
}

message TimeSeriesData {
    repeated PredictData predict_data = 1;
}

message PredictContainer {
    string name = 1;
    map<string, TimeSeriesData> row_predict_data = 2;
    repeated Recommendation recommendations = 3;
    Resource initial_resource = 4;
}

message PredictPod {
    string uid = 1;
    string namespace = 2;
    string name = 3;
    repeated PredictContainer predict_containers = 4;
}

message PostPredictResultRequest {
    repeated PredictPod predict_pods = 1;
}

message PostPredictResultResponse {
    string message = 1;
}

message TimeRange {
    google.protobuf.Timestamp start_time = 1;
    google.protobuf.Timestamp end_time = 2;
}
    
message LabelSelector {
    string key = 1;
    string op = 2 ;
    string value = 3;
}
    
message Result {
    map<string, string> labels = 1;
    repeated Value data = 2;
}

message Value {
    google.protobuf.Timestamp time = 1;
    double value = 2;
}
